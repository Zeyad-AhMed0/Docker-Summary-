# version: "3.8"
services:
  express-node-app:
    container_name: express-node-app-container
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - mongo
      
  mongo:
    image: mongo
    container_name: mongo-container
    volumes:  
      - mongo-DB:/data/db
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    
  mongo-express:

    image: mongo-express
    container_name: mongo-express-container
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongo
  # postgres:
  #   image: postgres 
  #   container_name: postgres-container
  #   volumes:  
  #     - postgres-DB:/var/lib/postgresql/data 
  #   restart: always
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: example
  redis:
    image: redis
    container_name: redis-container
    # ports:
    #     - "6380:6379"
    restart: always
    depends_on:
      - express-node-app
  nginx:
    image: nginx
    container_name: nginx-container
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - express-node-app
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower-container
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    command: --interval 30
volumes:
  mongo-DB:
  # postgres-DB:



    